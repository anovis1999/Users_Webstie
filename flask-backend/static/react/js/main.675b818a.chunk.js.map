{"version":3,"sources":["components/Navbar.js","components/SignUpForm.js","components/SignInForm.js","components/AddMailGroup.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","to","Button","SignUpForm","state","email","password","name","user_privilege","mail_group","hasAgreed","handleChange","bind","handleSubmit","e","target","value","type","checked","this","setState","toString","preventDefault","console","log","axios","post","then","response","catch","error","onSubmit","TextField","id","label","onChange","href","Component","SignInForm","AddMailGroups","groupmail","handleChangeG","App","basename","exact","path","component","AddMailGroup","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.675b818a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n          </Typography>\r\n          <Link to=\"/mail\" className=\"FormField__Link_Nav\">\r\n          <Button color=\"inherit\" >ADD GROUP MAIL</Button>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport '../App.css'\r\nimport axios from 'axios';\r\n\r\nclass SignUpForm extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: '',\r\n            user_privilege: 'member',\r\n            mail_group:'',\r\n            hasAgreed: \"false\"\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        let name = target.name;\r\n\r\n        this.setState({\r\n          [name]: value.toString()\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        console.log('The form was submitted with the following data:');\r\n        console.log(this.state);\r\n        axios.post('http://127.0.0.1:5000/sign-up', this.state)\r\n          .then(function (response) {\r\n            console.log(response);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"FormCenter\">\r\n            <h2>Sign Up</h2>\r\n            <form onSubmit={this.handleSubmit} className=\"FormFields\">\r\n              <div className=\"FormField\">\r\n                <TextField id=\"outlined-basic\" label=\"Full Name\" variant=\"outlined\" type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your full name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n              </div>\r\n              <br></br>\r\n              <div className=\"FormField\">\r\n                <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n              </div>\r\n              <br></br>\r\n              <div className=\"FormField\">\r\n                <TextField id=\"outlined-basic\" label=\"E-Mail Address\" variant=\"outlined\" type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n              </div>\r\n              <br></br>\r\n              <div className=\"FormField\">\r\n                <label className=\"FormField__CheckboxLabel\">\r\n                    <input className=\"FormField__Checkbox\" type=\"checkbox\" name=\"hasAgreed\" value={this.state.hasAgreed} onChange={this.handleChange} /> I agree all statements in <a href=\"\" className=\"FormField__TermsLink\">terms of service</a>\r\n                </label>\r\n              </div>\r\n\r\n              <br></br>\r\n              <Link to=\"/\" className=\"FormField__Link\">I'm already member</Link>\r\n              <br></br>\r\n              <br></br>\r\n\r\n              <div className=\"FormField\">\r\n                  <button className=\"FormField__Button\">Sign Up</button> \r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpForm;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\n\r\nclass SignInForm extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        let name = target.name;\r\n\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        console.log('The form was submitted with the following data:');\r\n        console.log(this.state);\r\n        axios.post('http://127.0.0.1:5000/', this.state)\r\n          .then(function (response) {\r\n            console.log(response);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"FormCenter\">\r\n            <h2>Sign In</h2>\r\n            <form onSubmit={this.handleSubmit} className=\"FormFields\" onSubmit={this.handleSubmit}>\r\n            <div className=\"FormField\">\r\n                <TextField id=\"outlined-basic\" label=\"E-Mail Address\" variant=\"outlined\" type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n              </div>\r\n                <br></br>\r\n              <div className=\"FormField\">\r\n                <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n              </div>\r\n                <br></br>\r\n                <Link to=\"/sign-up\" className=\"FormField__Link\">Create an account</Link>\r\n                <br></br>\r\n                <br></br>\r\n\r\n              <div className=\"FormField\">\r\n                  <button className=\"FormField__Button\">Sign In</button> \r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignInForm;","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\n\r\nclass AddMailGroups extends Component {\r\n  constructor() {\r\n      super();\r\n\r\n      this.state = {\r\n        email: '',\r\n        groupmail: ''\r\n      };\r\n\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleChangeG = this.handleChangeG.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n\r\n      this.setState({\r\n        email: e.target.value\r\n      });\r\n  }\r\n\r\n  handleChangeG(e) {\r\n\r\n    this.setState({\r\n      groupmail: e.target.value\r\n    });\r\n  }\r\n\r\n\r\n  handleSubmit(e) {\r\n      e.preventDefault();\r\n\r\n      console.log('The form was submitted with the following data:');\r\n      console.log(this.state);\r\n      axios.post('http://127.0.0.1:5000/mail', this.state)\r\n        .then(function (response) {\r\n          console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  render() {\r\n      return (\r\n      <div className=\"FormCenter\">\r\n\r\n          <h2>ADD TO MAIL GROUP</h2>\r\n\r\n          <form onSubmit={this.handleSubmit} className=\"FormFields\">\r\n              <div className=\"n1\">\r\n              <TextField className=\"group\" id=\"outlined-basic\" label=\"group E-Mail Address\" variant=\"outlined\" type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter Group email\" name=\"email\" value={this.state.groupmail} onChange={this.handleChangeG} />\r\n              </div>\r\n            <br></br> \r\n            <br></br> \r\n            <div className=\"n2\">\r\n              <TextField className=\"single\" id=\"outlined-basic\" label=\"E-Mail Address\" variant=\"outlined\" type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n              </div>\r\n            <br></br>\r\n\r\n\r\n            <div className=\"FormField\">\r\n                <button className=\"FormField__Button\">submit</button> \r\n            </div>\r\n\r\n          </form>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\n\r\nexport default AddMailGroups;","import React from 'react';\nimport './App.css'\nimport Navbar from './components/Navbar';\nimport SignUpForm from './components/SignUpForm';\nimport SignInForm from './components/SignInForm';\nimport AddMailGroup from './components/AddMailGroup';\n\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\n\n\n\nfunction App() {\n  return (\n<Router basename=\"/\">\n  <Navbar></Navbar>\n        <div className=\"App\">\n          <div className=\"App__Aside\"></div>\n          <div className=\"App__Form\">\n              <Route exact path=\"/\" component={SignInForm}>\n              </Route>\n              <Route path=\"/sign-up\" component={SignUpForm}>\n              </Route>\n              <Route path=\"/mail\" component={AddMailGroup}>\n              </Route>\n          </div>\n\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}